(function() {var implementors = {
"forest":[["impl Freeze for <a class=\"struct\" href=\"forest/cli/struct.Client.html\" title=\"struct forest::cli::Client\">Client</a>",1,["forest::cli::client::Client"]],["impl Freeze for <a class=\"struct\" href=\"forest/cli/struct.LogConfig.html\" title=\"struct forest::cli::LogConfig\">LogConfig</a>",1,["forest::cli::config::LogConfig"]],["impl Freeze for <a class=\"struct\" href=\"forest/cli/struct.LogValue.html\" title=\"struct forest::cli::LogValue\">LogValue</a>",1,["forest::cli::config::LogValue"]],["impl Freeze for <a class=\"struct\" href=\"forest/cli/struct.DaemonConfig.html\" title=\"struct forest::cli::DaemonConfig\">DaemonConfig</a>",1,["forest::cli::config::DaemonConfig"]],["impl Freeze for <a class=\"struct\" href=\"forest/cli/struct.Config.html\" title=\"struct forest::cli::Config\">Config</a>",1,["forest::cli::config::Config"]],["impl Freeze for <a class=\"struct\" href=\"forest/cli/struct.Cli.html\" title=\"struct forest::cli::Cli\">Cli</a>",1,["forest::cli::Cli"]],["impl Freeze for <a class=\"enum\" href=\"forest/cli/enum.Subcommand.html\" title=\"enum forest::cli::Subcommand\">Subcommand</a>",1,["forest::cli::Subcommand"]],["impl Freeze for <a class=\"struct\" href=\"forest/cli/struct.CliOpts.html\" title=\"struct forest::cli::CliOpts\">CliOpts</a>",1,["forest::cli::CliOpts"]]],
"forest_actor_interface":[["impl&lt;BS, V&gt; Freeze for <a class=\"enum\" href=\"forest_actor_interface/enum.Map.html\" title=\"enum forest_actor_interface::Map\">Map</a>&lt;BS, V&gt;<span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;BS: Freeze,</span>",1,["forest_actor_interface::adt::map::Map"]],["impl Freeze for <a class=\"enum\" href=\"forest_actor_interface/account/enum.State.html\" title=\"enum forest_actor_interface::account::State\">State</a>",1,["forest_actor_interface::builtin::account::State"]],["impl Freeze for <a class=\"enum\" href=\"forest_actor_interface/init/enum.State.html\" title=\"enum forest_actor_interface::init::State\">State</a>",1,["forest_actor_interface::builtin::init::State"]],["impl Freeze for <a class=\"enum\" href=\"forest_actor_interface/market/enum.State.html\" title=\"enum forest_actor_interface::market::State\">State</a>",1,["forest_actor_interface::builtin::market::State"]],["impl&lt;'a, BS&gt; Freeze for <a class=\"enum\" href=\"forest_actor_interface/market/enum.BalanceTable.html\" title=\"enum forest_actor_interface::market::BalanceTable\">BalanceTable</a>&lt;'a, BS&gt;",1,["forest_actor_interface::builtin::market::BalanceTable"]],["impl&lt;'a, BS&gt; Freeze for <a class=\"enum\" href=\"forest_actor_interface/market/enum.DealProposals.html\" title=\"enum forest_actor_interface::market::DealProposals\">DealProposals</a>&lt;'a, BS&gt;",1,["forest_actor_interface::builtin::market::DealProposals"]],["impl Freeze for <a class=\"struct\" href=\"forest_actor_interface/market/struct.DealProposal.html\" title=\"struct forest_actor_interface::market::DealProposal\">DealProposal</a>",1,["forest_actor_interface::builtin::market::DealProposal"]],["impl&lt;'a, BS&gt; Freeze for <a class=\"enum\" href=\"forest_actor_interface/market/enum.DealStates.html\" title=\"enum forest_actor_interface::market::DealStates\">DealStates</a>&lt;'a, BS&gt;",1,["forest_actor_interface::builtin::market::DealStates"]],["impl Freeze for <a class=\"struct\" href=\"forest_actor_interface/market/struct.DealState.html\" title=\"struct forest_actor_interface::market::DealState\">DealState</a>",1,["forest_actor_interface::builtin::market::DealState"]],["impl Freeze for <a class=\"enum\" href=\"forest_actor_interface/miner/enum.State.html\" title=\"enum forest_actor_interface::miner::State\">State</a>",1,["forest_actor_interface::builtin::miner::State"]],["impl Freeze for <a class=\"struct\" href=\"forest_actor_interface/miner/struct.MinerInfo.html\" title=\"struct forest_actor_interface::miner::MinerInfo\">MinerInfo</a>",1,["forest_actor_interface::builtin::miner::MinerInfo"]],["impl Freeze for <a class=\"struct\" href=\"forest_actor_interface/miner/struct.MinerPower.html\" title=\"struct forest_actor_interface::miner::MinerPower\">MinerPower</a>",1,["forest_actor_interface::builtin::miner::MinerPower"]],["impl Freeze for <a class=\"enum\" href=\"forest_actor_interface/miner/enum.Deadline.html\" title=\"enum forest_actor_interface::miner::Deadline\">Deadline</a>",1,["forest_actor_interface::builtin::miner::Deadline"]],["impl&lt;'a&gt; Freeze for <a class=\"enum\" href=\"forest_actor_interface/miner/enum.Partition.html\" title=\"enum forest_actor_interface::miner::Partition\">Partition</a>&lt;'a&gt;",1,["forest_actor_interface::builtin::miner::Partition"]],["impl Freeze for <a class=\"struct\" href=\"forest_actor_interface/miner/struct.SectorOnChainInfo.html\" title=\"struct forest_actor_interface::miner::SectorOnChainInfo\">SectorOnChainInfo</a>",1,["forest_actor_interface::builtin::miner::SectorOnChainInfo"]],["impl Freeze for <a class=\"struct\" href=\"forest_actor_interface/miner/struct.SectorPreCommitOnChainInfo.html\" title=\"struct forest_actor_interface::miner::SectorPreCommitOnChainInfo\">SectorPreCommitOnChainInfo</a>",1,["forest_actor_interface::builtin::miner::SectorPreCommitOnChainInfo"]],["impl Freeze for <a class=\"struct\" href=\"forest_actor_interface/miner/struct.SectorPreCommitInfo.html\" title=\"struct forest_actor_interface::miner::SectorPreCommitInfo\">SectorPreCommitInfo</a>",1,["forest_actor_interface::builtin::miner::SectorPreCommitInfo"]],["impl Freeze for <a class=\"enum\" href=\"forest_actor_interface/multisig/enum.State.html\" title=\"enum forest_actor_interface::multisig::State\">State</a>",1,["forest_actor_interface::builtin::multisig::State"]],["impl Freeze for <a class=\"enum\" href=\"forest_actor_interface/power/enum.State.html\" title=\"enum forest_actor_interface::power::State\">State</a>",1,["forest_actor_interface::builtin::power::State"]],["impl Freeze for <a class=\"struct\" href=\"forest_actor_interface/power/struct.Claim.html\" title=\"struct forest_actor_interface::power::Claim\">Claim</a>",1,["forest_actor_interface::builtin::power::Claim"]],["impl Freeze for <a class=\"enum\" href=\"forest_actor_interface/reward/enum.State.html\" title=\"enum forest_actor_interface::reward::State\">State</a>",1,["forest_actor_interface::builtin::reward::State"]],["impl Freeze for <a class=\"enum\" href=\"forest_actor_interface/enum.ActorVersion.html\" title=\"enum forest_actor_interface::ActorVersion\">ActorVersion</a>",1,["forest_actor_interface::ActorVersion"]]],
"forest_auth":[["impl Freeze for <a class=\"enum\" href=\"forest_auth/enum.Error.html\" title=\"enum forest_auth::Error\">Error</a>",1,["forest_auth::Error"]]],
"forest_beacon":[["impl Freeze for <a class=\"struct\" href=\"forest_beacon/beacon_entries/json/struct.BeaconEntryJson.html\" title=\"struct forest_beacon::beacon_entries::json::BeaconEntryJson\">BeaconEntryJson</a>",1,["forest_beacon::beacon_entries::json::BeaconEntryJson"]],["impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"forest_beacon/beacon_entries/json/struct.BeaconEntryJsonRef.html\" title=\"struct forest_beacon::beacon_entries::json::BeaconEntryJsonRef\">BeaconEntryJsonRef</a>&lt;'a&gt;",1,["forest_beacon::beacon_entries::json::BeaconEntryJsonRef"]],["impl Freeze for <a class=\"struct\" href=\"forest_beacon/beacon_entries/struct.BeaconEntry.html\" title=\"struct forest_beacon::beacon_entries::BeaconEntry\">BeaconEntry</a>",1,["forest_beacon::beacon_entries::BeaconEntry"]],["impl Freeze for <a class=\"struct\" href=\"forest_beacon/struct.DrandPublic.html\" title=\"struct forest_beacon::DrandPublic\">DrandPublic</a>",1,["forest_beacon::drand::DrandPublic"]],["impl Freeze for <a class=\"enum\" href=\"forest_beacon/enum.DrandNetwork.html\" title=\"enum forest_beacon::DrandNetwork\">DrandNetwork</a>",1,["forest_beacon::drand::DrandNetwork"]],["impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"forest_beacon/struct.DrandConfig.html\" title=\"struct forest_beacon::DrandConfig\">DrandConfig</a>&lt;'a&gt;",1,["forest_beacon::drand::DrandConfig"]],["impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"forest_beacon/struct.BeaconSchedule.html\" title=\"struct forest_beacon::BeaconSchedule\">BeaconSchedule</a>&lt;T&gt;",1,["forest_beacon::drand::BeaconSchedule"]],["impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"forest_beacon/struct.BeaconPoint.html\" title=\"struct forest_beacon::BeaconPoint\">BeaconPoint</a>&lt;T&gt;",1,["forest_beacon::drand::BeaconPoint"]],["impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"forest_beacon/struct.ChainInfo.html\" title=\"struct forest_beacon::ChainInfo\">ChainInfo</a>&lt;'a&gt;",1,["forest_beacon::drand::ChainInfo"]],["impl Freeze for <a class=\"struct\" href=\"forest_beacon/struct.BeaconEntryJson.html\" title=\"struct forest_beacon::BeaconEntryJson\">BeaconEntryJson</a>",1,["forest_beacon::drand::BeaconEntryJson"]],["impl !Freeze for <a class=\"struct\" href=\"forest_beacon/struct.DrandBeacon.html\" title=\"struct forest_beacon::DrandBeacon\">DrandBeacon</a>",1,["forest_beacon::drand::DrandBeacon"]],["impl Freeze for <a class=\"struct\" href=\"forest_beacon/struct.MockBeacon.html\" title=\"struct forest_beacon::MockBeacon\">MockBeacon</a>",1,["forest_beacon::mock_beacon::MockBeacon"]]],
"forest_blocks":[["impl !Freeze for <a class=\"struct\" href=\"forest_blocks/struct.Block.html\" title=\"struct forest_blocks::Block\">Block</a>",1,["forest_blocks::block::Block"]],["impl Freeze for <a class=\"struct\" href=\"forest_blocks/struct.TxMeta.html\" title=\"struct forest_blocks::TxMeta\">TxMeta</a>",1,["forest_blocks::block::TxMeta"]],["impl Freeze for <a class=\"struct\" href=\"forest_blocks/election_proof/json/struct.ElectionProofJson.html\" title=\"struct forest_blocks::election_proof::json::ElectionProofJson\">ElectionProofJson</a>",1,["forest_blocks::election_proof::json::ElectionProofJson"]],["impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"forest_blocks/election_proof/json/struct.ElectionProofJsonRef.html\" title=\"struct forest_blocks::election_proof::json::ElectionProofJsonRef\">ElectionProofJsonRef</a>&lt;'a&gt;",1,["forest_blocks::election_proof::json::ElectionProofJsonRef"]],["impl Freeze for <a class=\"struct\" href=\"forest_blocks/election_proof/struct.ElectionProof.html\" title=\"struct forest_blocks::election_proof::ElectionProof\">ElectionProof</a>",1,["forest_blocks::election_proof::ElectionProof"]],["impl Freeze for <a class=\"enum\" href=\"forest_blocks/enum.Error.html\" title=\"enum forest_blocks::Error\">Error</a>",1,["forest_blocks::errors::Error"]],["impl !Freeze for <a class=\"struct\" href=\"forest_blocks/gossip_block/json/struct.GossipBlockJson.html\" title=\"struct forest_blocks::gossip_block::json::GossipBlockJson\">GossipBlockJson</a>",1,["forest_blocks::gossip_block::json::GossipBlockJson"]],["impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"forest_blocks/gossip_block/json/struct.GossipBlockJsonRef.html\" title=\"struct forest_blocks::gossip_block::json::GossipBlockJsonRef\">GossipBlockJsonRef</a>&lt;'a&gt;",1,["forest_blocks::gossip_block::json::GossipBlockJsonRef"]],["impl !Freeze for <a class=\"struct\" href=\"forest_blocks/gossip_block/struct.GossipBlock.html\" title=\"struct forest_blocks::gossip_block::GossipBlock\">GossipBlock</a>",1,["forest_blocks::gossip_block::GossipBlock"]],["impl !Freeze for <a class=\"struct\" href=\"forest_blocks/header/json/struct.BlockHeaderJson.html\" title=\"struct forest_blocks::header::json::BlockHeaderJson\">BlockHeaderJson</a>",1,["forest_blocks::header::json::BlockHeaderJson"]],["impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"forest_blocks/header/json/struct.BlockHeaderJsonRef.html\" title=\"struct forest_blocks::header::json::BlockHeaderJsonRef\">BlockHeaderJsonRef</a>&lt;'a&gt;",1,["forest_blocks::header::json::BlockHeaderJsonRef"]],["impl !Freeze for <a class=\"struct\" href=\"forest_blocks/header/struct.BlockHeader.html\" title=\"struct forest_blocks::header::BlockHeader\">BlockHeader</a>",1,["forest_blocks::header::BlockHeader"]],["impl Freeze for <a class=\"struct\" href=\"forest_blocks/header/struct.BlockHeaderBuilder.html\" title=\"struct forest_blocks::header::BlockHeaderBuilder\">BlockHeaderBuilder</a>",1,["forest_blocks::header::BlockHeaderBuilder"]],["impl Freeze for <a class=\"enum\" href=\"forest_blocks/header/enum.BlockHeaderBuilderError.html\" title=\"enum forest_blocks::header::BlockHeaderBuilderError\">BlockHeaderBuilderError</a>",1,["forest_blocks::header::BlockHeaderBuilderError"]],["impl Freeze for <a class=\"struct\" href=\"forest_blocks/ticket/json/struct.TicketJson.html\" title=\"struct forest_blocks::ticket::json::TicketJson\">TicketJson</a>",1,["forest_blocks::ticket::json::TicketJson"]],["impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"forest_blocks/ticket/json/struct.TicketJsonRef.html\" title=\"struct forest_blocks::ticket::json::TicketJsonRef\">TicketJsonRef</a>&lt;'a&gt;",1,["forest_blocks::ticket::json::TicketJsonRef"]],["impl Freeze for <a class=\"struct\" href=\"forest_blocks/ticket/struct.Ticket.html\" title=\"struct forest_blocks::ticket::Ticket\">Ticket</a>",1,["forest_blocks::ticket::Ticket"]],["impl Freeze for <a class=\"struct\" href=\"forest_blocks/tipset/tipset_keys_json/struct.TipsetKeysJson.html\" title=\"struct forest_blocks::tipset::tipset_keys_json::TipsetKeysJson\">TipsetKeysJson</a>",1,["forest_blocks::tipset::tipset_keys_json::TipsetKeysJson"]],["impl Freeze for <a class=\"struct\" href=\"forest_blocks/tipset/tipset_json/struct.TipsetJson.html\" title=\"struct forest_blocks::tipset::tipset_json::TipsetJson\">TipsetJson</a>",1,["forest_blocks::tipset::tipset_json::TipsetJson"]],["impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"forest_blocks/tipset/tipset_json/struct.TipsetJsonRef.html\" title=\"struct forest_blocks::tipset::tipset_json::TipsetJsonRef\">TipsetJsonRef</a>&lt;'a&gt;",1,["forest_blocks::tipset::tipset_json::TipsetJsonRef"]],["impl Freeze for <a class=\"struct\" href=\"forest_blocks/tipset/struct.TipsetKeys.html\" title=\"struct forest_blocks::tipset::TipsetKeys\">TipsetKeys</a>",1,["forest_blocks::tipset::TipsetKeys"]],["impl !Freeze for <a class=\"struct\" href=\"forest_blocks/tipset/struct.Tipset.html\" title=\"struct forest_blocks::tipset::Tipset\">Tipset</a>",1,["forest_blocks::tipset::Tipset"]],["impl !Freeze for <a class=\"struct\" href=\"forest_blocks/tipset/struct.FullTipset.html\" title=\"struct forest_blocks::tipset::FullTipset\">FullTipset</a>",1,["forest_blocks::tipset::FullTipset"]]],
"forest_chain":[["impl Freeze for <a class=\"struct\" href=\"forest_chain/base_fee/struct.MINIMUM_BASE_FEE.html\" title=\"struct forest_chain::base_fee::MINIMUM_BASE_FEE\">MINIMUM_BASE_FEE</a>",1,["forest_chain::store::base_fee::MINIMUM_BASE_FEE"]],["impl Freeze for <a class=\"enum\" href=\"forest_chain/headchange_json/enum.HeadChangeJson.html\" title=\"enum forest_chain::headchange_json::HeadChangeJson\">HeadChangeJson</a>",1,["forest_chain::store::chain_store::headchange_json::HeadChangeJson"]],["impl Freeze for <a class=\"enum\" href=\"forest_chain/enum.HeadChange.html\" title=\"enum forest_chain::HeadChange\">HeadChange</a>",1,["forest_chain::store::chain_store::HeadChange"]],["impl&lt;DB&gt; !Freeze for <a class=\"struct\" href=\"forest_chain/struct.ChainStore.html\" title=\"struct forest_chain::ChainStore\">ChainStore</a>&lt;DB&gt;",1,["forest_chain::store::chain_store::ChainStore"]],["impl Freeze for <a class=\"struct\" href=\"forest_chain/struct.PersistedBlockMessages.html\" title=\"struct forest_chain::PersistedBlockMessages\">PersistedBlockMessages</a>",1,["forest_chain::store::chain_store::PersistedBlockMessages"]],["impl Freeze for <a class=\"enum\" href=\"forest_chain/enum.Error.html\" title=\"enum forest_chain::Error\">Error</a>",1,["forest_chain::store::errors::Error"]]],
"forest_chain_sync":[["impl !Freeze for <a class=\"struct\" href=\"forest_chain_sync/struct.BadBlockCache.html\" title=\"struct forest_chain_sync::BadBlockCache\">BadBlockCache</a>",1,["forest_chain_sync::bad_block_cache::BadBlockCache"]],["impl Freeze for <a class=\"struct\" href=\"forest_chain_sync/struct.SyncConfig.html\" title=\"struct forest_chain_sync::SyncConfig\">SyncConfig</a>",1,["forest_chain_sync::chain_muxer::SyncConfig"]],["impl&lt;DB, M, C&gt; Freeze for <a class=\"struct\" href=\"forest_chain_sync/struct.ChainMuxer.html\" title=\"struct forest_chain_sync::ChainMuxer\">ChainMuxer</a>&lt;DB, M, C&gt;",1,["forest_chain_sync::chain_muxer::ChainMuxer"]],["impl Freeze for <a class=\"struct\" href=\"forest_chain_sync/consensus/struct.SyncGossipSubmitter.html\" title=\"struct forest_chain_sync::consensus::SyncGossipSubmitter\">SyncGossipSubmitter</a>",1,["forest_chain_sync::consensus::SyncGossipSubmitter"]],["impl Freeze for <a class=\"enum\" href=\"forest_chain_sync/enum.SyncStage.html\" title=\"enum forest_chain_sync::SyncStage\">SyncStage</a>",1,["forest_chain_sync::sync_state::SyncStage"]],["impl Freeze for <a class=\"struct\" href=\"forest_chain_sync/struct.SyncState.html\" title=\"struct forest_chain_sync::SyncState\">SyncState</a>",1,["forest_chain_sync::sync_state::SyncState"]],["impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"forest_chain_sync/struct.TipsetValidator.html\" title=\"struct forest_chain_sync::TipsetValidator\">TipsetValidator</a>&lt;'a&gt;",1,["forest_chain_sync::validation::TipsetValidator"]]],
"forest_crypto":[["impl Freeze for <a class=\"enum\" href=\"forest_crypto/enum.Error.html\" title=\"enum forest_crypto::Error\">Error</a>",1,["forest_crypto::errors::Error"]],["impl Freeze for <a class=\"struct\" href=\"forest_crypto/signature/json/signature_type/struct.SignatureTypeJson.html\" title=\"struct forest_crypto::signature::json::signature_type::SignatureTypeJson\">SignatureTypeJson</a>",1,["forest_crypto::signature::json::signature_type::SignatureTypeJson"]],["impl Freeze for <a class=\"struct\" href=\"forest_crypto/signature/json/struct.SignatureJson.html\" title=\"struct forest_crypto::signature::json::SignatureJson\">SignatureJson</a>",1,["forest_crypto::signature::json::SignatureJson"]],["impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"forest_crypto/signature/json/struct.SignatureJsonRef.html\" title=\"struct forest_crypto::signature::json::SignatureJsonRef\">SignatureJsonRef</a>&lt;'a&gt;",1,["forest_crypto::signature::json::SignatureJsonRef"]],["impl Freeze for <a class=\"struct\" href=\"forest_crypto/vrf/struct.VRFProof.html\" title=\"struct forest_crypto::vrf::VRFProof\">VRFProof</a>",1,["forest_crypto::vrf::VRFProof"]]],
"forest_db":[["impl Freeze for <a class=\"enum\" href=\"forest_db/enum.Error.html\" title=\"enum forest_db::Error\">Error</a>",1,["forest_db::errors::Error"]],["impl Freeze for <a class=\"struct\" href=\"forest_db/struct.MemoryDB.html\" title=\"struct forest_db::MemoryDB\">MemoryDB</a>",1,["forest_db::memory::MemoryDB"]],["impl Freeze for <a class=\"struct\" href=\"forest_db/rocks/struct.RocksDb.html\" title=\"struct forest_db::rocks::RocksDb\">RocksDb</a>",1,["forest_db::rocks::RocksDb"]],["impl Freeze for <a class=\"struct\" href=\"forest_db/rocks_config/struct.RocksDbConfig.html\" title=\"struct forest_db::rocks_config::RocksDbConfig\">RocksDbConfig</a>",1,["forest_db::rocks_config::RocksDbConfig"]]],
"forest_deleg_cns":[["impl Freeze for <a class=\"enum\" href=\"forest_deleg_cns/enum.DelegatedConsensusError.html\" title=\"enum forest_deleg_cns::DelegatedConsensusError\">DelegatedConsensusError</a>",1,["forest_deleg_cns::consensus::DelegatedConsensusError"]],["impl Freeze for <a class=\"struct\" href=\"forest_deleg_cns/struct.DelegatedConsensus.html\" title=\"struct forest_deleg_cns::DelegatedConsensus\">DelegatedConsensus</a>",1,["forest_deleg_cns::consensus::DelegatedConsensus"]],["impl Freeze for <a class=\"struct\" href=\"forest_deleg_cns/struct.DelegatedProposer.html\" title=\"struct forest_deleg_cns::DelegatedProposer\">DelegatedProposer</a>",1,["forest_deleg_cns::proposer::DelegatedProposer"]]],
"forest_fil_cns":[["impl Freeze for <a class=\"enum\" href=\"forest_fil_cns/enum.FilecoinConsensusError.html\" title=\"enum forest_fil_cns::FilecoinConsensusError\">FilecoinConsensusError</a>",1,["forest_fil_cns::FilecoinConsensusError"]],["impl&lt;B, V&gt; Freeze for <a class=\"struct\" href=\"forest_fil_cns/struct.FilecoinConsensus.html\" title=\"struct forest_fil_cns::FilecoinConsensus\">FilecoinConsensus</a>&lt;B, V&gt;",1,["forest_fil_cns::FilecoinConsensus"]]],
"forest_fil_types":[["impl Freeze for <a class=\"struct\" href=\"forest_fil_types/build_version/struct.APIVersion.html\" title=\"struct forest_fil_types::build_version::APIVersion\">APIVersion</a>",1,["forest_fil_types::build_version::APIVersion"]],["impl Freeze for <a class=\"struct\" href=\"forest_fil_types/build_version/struct.Version.html\" title=\"struct forest_fil_types::build_version::Version\">Version</a>",1,["forest_fil_types::build_version::Version"]],["impl Freeze for <a class=\"struct\" href=\"forest_fil_types/deadlines/struct.DeadlineInfo.html\" title=\"struct forest_fil_types::deadlines::DeadlineInfo\">DeadlineInfo</a>",1,["forest_fil_types::deadlines::DeadlineInfo"]],["impl Freeze for <a class=\"struct\" href=\"forest_fil_types/sector/post/json/struct.PoStProofJson.html\" title=\"struct forest_fil_types::sector::post::json::PoStProofJson\">PoStProofJson</a>",1,["forest_fil_types::sector::post::json::PoStProofJson"]],["impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"forest_fil_types/sector/post/json/struct.PoStProofJsonRef.html\" title=\"struct forest_fil_types::sector::post::json::PoStProofJsonRef\">PoStProofJsonRef</a>&lt;'a&gt;",1,["forest_fil_types::sector::post::json::PoStProofJsonRef"]],["impl Freeze for <a class=\"struct\" href=\"forest_fil_types/sector/post/json/struct.SectorInfoJson.html\" title=\"struct forest_fil_types::sector::post::json::SectorInfoJson\">SectorInfoJson</a>",1,["forest_fil_types::sector::post::json::SectorInfoJson"]],["impl Freeze for <a class=\"enum\" href=\"forest_fil_types/genesis/enum.ActorType.html\" title=\"enum forest_fil_types::genesis::ActorType\">ActorType</a>",1,["forest_fil_types::genesis::ActorType"]],["impl Freeze for <a class=\"struct\" href=\"forest_fil_types/genesis/struct.Actor.html\" title=\"struct forest_fil_types::genesis::Actor\">Actor</a>",1,["forest_fil_types::genesis::Actor"]],["impl Freeze for <a class=\"struct\" href=\"forest_fil_types/genesis/struct.Miner.html\" title=\"struct forest_fil_types::genesis::Miner\">Miner</a>",1,["forest_fil_types::genesis::Miner"]],["impl Freeze for <a class=\"struct\" href=\"forest_fil_types/genesis/struct.Template.html\" title=\"struct forest_fil_types::genesis::Template\">Template</a>",1,["forest_fil_types::genesis::Template"]],["impl Freeze for <a class=\"enum\" href=\"forest_fil_types/verifier/enum.MockVerifier.html\" title=\"enum forest_fil_types::verifier::MockVerifier\">MockVerifier</a>",1,["forest_fil_types::verifier::mock::MockVerifier"]],["impl Freeze for <a class=\"enum\" href=\"forest_fil_types/verifier/enum.FullVerifier.html\" title=\"enum forest_fil_types::verifier::FullVerifier\">FullVerifier</a>",1,["forest_fil_types::verifier::FullVerifier"]]],
"forest_hash_utils":[["impl Freeze for <a class=\"struct\" href=\"forest_hash_utils/struct.BytesKey.html\" title=\"struct forest_hash_utils::BytesKey\">BytesKey</a>",1,["forest_hash_utils::key::BytesKey"]]],
"forest_interpreter":[["impl Freeze for <a class=\"struct\" href=\"forest_interpreter/struct.GasCharge.html\" title=\"struct forest_interpreter::GasCharge\">GasCharge</a>",1,["forest_interpreter::gas_tracker::gas_charge::GasCharge"]],["impl Freeze for <a class=\"struct\" href=\"forest_interpreter/struct.BlockMessages.html\" title=\"struct forest_interpreter::BlockMessages\">BlockMessages</a>",1,["forest_interpreter::vm::BlockMessages"]],["impl Freeze for <a class=\"struct\" href=\"forest_interpreter/struct.Heights.html\" title=\"struct forest_interpreter::Heights\">Heights</a>",1,["forest_interpreter::vm::Heights"]],["impl&lt;DB, P&nbsp;=&nbsp;DefaultNetworkParams&gt; !Freeze for <a class=\"struct\" href=\"forest_interpreter/struct.VM.html\" title=\"struct forest_interpreter::VM\">VM</a>&lt;DB, P&gt;",1,["forest_interpreter::vm::VM"]],["impl Freeze for <a class=\"struct\" href=\"forest_interpreter/struct.RewardActorMessageCalc.html\" title=\"struct forest_interpreter::RewardActorMessageCalc\">RewardActorMessageCalc</a>",1,["forest_interpreter::vm::RewardActorMessageCalc"]],["impl Freeze for <a class=\"struct\" href=\"forest_interpreter/struct.NoRewardCalc.html\" title=\"struct forest_interpreter::NoRewardCalc\">NoRewardCalc</a>",1,["forest_interpreter::vm::NoRewardCalc"]],["impl Freeze for <a class=\"struct\" href=\"forest_interpreter/struct.FixedRewardCalc.html\" title=\"struct forest_interpreter::FixedRewardCalc\">FixedRewardCalc</a>",1,["forest_interpreter::vm::FixedRewardCalc"]]],
"forest_ipld":[["impl Freeze for <a class=\"enum\" href=\"forest_ipld/enum.Error.html\" title=\"enum forest_ipld::Error\">Error</a>",1,["forest_ipld::error::Error"]],["impl Freeze for <a class=\"enum\" href=\"forest_ipld/selector/enum.VisitReason.html\" title=\"enum forest_ipld::selector::VisitReason\">VisitReason</a>",1,["forest_ipld::selector::walk::VisitReason"]],["impl&lt;L&gt; Freeze for <a class=\"struct\" href=\"forest_ipld/selector/struct.Progress.html\" title=\"struct forest_ipld::selector::Progress\">Progress</a>&lt;L&gt;<span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;L: Freeze,</span>",1,["forest_ipld::selector::walk::Progress"]],["impl Freeze for <a class=\"struct\" href=\"forest_ipld/selector/struct.LastBlockInfo.html\" title=\"struct forest_ipld::selector::LastBlockInfo\">LastBlockInfo</a>",1,["forest_ipld::selector::walk::LastBlockInfo"]],["impl Freeze for <a class=\"enum\" href=\"forest_ipld/selector/enum.Selector.html\" title=\"enum forest_ipld::selector::Selector\">Selector</a>",1,["forest_ipld::selector::Selector"]],["impl Freeze for <a class=\"enum\" href=\"forest_ipld/selector/enum.RecursionLimit.html\" title=\"enum forest_ipld::selector::RecursionLimit\">RecursionLimit</a>",1,["forest_ipld::selector::RecursionLimit"]],["impl Freeze for <a class=\"enum\" href=\"forest_ipld/selector/enum.Condition.html\" title=\"enum forest_ipld::selector::Condition\">Condition</a>",1,["forest_ipld::selector::Condition"]],["impl Freeze for <a class=\"struct\" href=\"forest_ipld/json/struct.IpldJson.html\" title=\"struct forest_ipld::json::IpldJson\">IpldJson</a>",1,["forest_ipld::json::IpldJson"]],["impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"forest_ipld/json/struct.IpldJsonRef.html\" title=\"struct forest_ipld::json::IpldJsonRef\">IpldJsonRef</a>&lt;'a&gt;",1,["forest_ipld::json::IpldJsonRef"]]],
"forest_json":[["impl Freeze for <a class=\"struct\" href=\"forest_json/address/json/vec/struct.AddressJsonVec.html\" title=\"struct forest_json::address::json::vec::AddressJsonVec\">AddressJsonVec</a>",1,["forest_json::address::json::vec::AddressJsonVec"]],["impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"forest_json/address/json/vec/struct.AddressJsonSlice.html\" title=\"struct forest_json::address::json::vec::AddressJsonSlice\">AddressJsonSlice</a>&lt;'a&gt;",1,["forest_json::address::json::vec::AddressJsonSlice"]],["impl Freeze for <a class=\"struct\" href=\"forest_json/address/json/struct.AddressJson.html\" title=\"struct forest_json::address::json::AddressJson\">AddressJson</a>",1,["forest_json::address::json::AddressJson"]],["impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"forest_json/address/json/struct.AddressJsonRef.html\" title=\"struct forest_json::address::json::AddressJsonRef\">AddressJsonRef</a>&lt;'a&gt;",1,["forest_json::address::json::AddressJsonRef"]],["impl Freeze for <a class=\"struct\" href=\"forest_json/cid/vec/struct.CidJsonVec.html\" title=\"struct forest_json::cid::vec::CidJsonVec\">CidJsonVec</a>",1,["forest_json::cid::vec::CidJsonVec"]],["impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"forest_json/cid/vec/struct.CidJsonSlice.html\" title=\"struct forest_json::cid::vec::CidJsonSlice\">CidJsonSlice</a>&lt;'a&gt;",1,["forest_json::cid::vec::CidJsonSlice"]],["impl Freeze for <a class=\"struct\" href=\"forest_json/cid/struct.CidJson.html\" title=\"struct forest_json::cid::CidJson\">CidJson</a>",1,["forest_json::cid::CidJson"]],["impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"forest_json/cid/struct.CidJsonRef.html\" title=\"struct forest_json::cid::CidJsonRef\">CidJsonRef</a>&lt;'a&gt;",1,["forest_json::cid::CidJsonRef"]]],
"forest_json_utils":[["impl&lt;T, D&gt; Freeze for <a class=\"struct\" href=\"forest_json_utils/struct.GoVecVisitor.html\" title=\"struct forest_json_utils::GoVecVisitor\">GoVecVisitor</a>&lt;T, D&gt;",1,["forest_json_utils::GoVecVisitor"]]],
"forest_key_management":[["impl Freeze for <a class=\"enum\" href=\"forest_key_management/enum.Error.html\" title=\"enum forest_key_management::Error\">Error</a>",1,["forest_key_management::errors::Error"]],["impl Freeze for <a class=\"struct\" href=\"forest_key_management/json/struct.KeyInfoJson.html\" title=\"struct forest_key_management::json::KeyInfoJson\">KeyInfoJson</a>",1,["forest_key_management::keystore::json::KeyInfoJson"]],["impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"forest_key_management/json/struct.KeyInfoJsonRef.html\" title=\"struct forest_key_management::json::KeyInfoJsonRef\">KeyInfoJsonRef</a>&lt;'a&gt;",1,["forest_key_management::keystore::json::KeyInfoJsonRef"]],["impl Freeze for <a class=\"struct\" href=\"forest_key_management/struct.KeyInfo.html\" title=\"struct forest_key_management::KeyInfo\">KeyInfo</a>",1,["forest_key_management::keystore::KeyInfo"]],["impl Freeze for <a class=\"struct\" href=\"forest_key_management/struct.PersistentKeyInfo.html\" title=\"struct forest_key_management::PersistentKeyInfo\">PersistentKeyInfo</a>",1,["forest_key_management::keystore::PersistentKeyInfo"]],["impl Freeze for <a class=\"struct\" href=\"forest_key_management/struct.KeyStore.html\" title=\"struct forest_key_management::KeyStore\">KeyStore</a>",1,["forest_key_management::keystore::KeyStore"]],["impl Freeze for <a class=\"enum\" href=\"forest_key_management/enum.KeyStoreConfig.html\" title=\"enum forest_key_management::KeyStoreConfig\">KeyStoreConfig</a>",1,["forest_key_management::keystore::KeyStoreConfig"]],["impl Freeze for <a class=\"enum\" href=\"forest_key_management/enum.EncryptedKeyStoreError.html\" title=\"enum forest_key_management::EncryptedKeyStoreError\">EncryptedKeyStoreError</a>",1,["forest_key_management::keystore::EncryptedKeyStoreError"]],["impl Freeze for <a class=\"struct\" href=\"forest_key_management/struct.Key.html\" title=\"struct forest_key_management::Key\">Key</a>",1,["forest_key_management::wallet::Key"]],["impl Freeze for <a class=\"struct\" href=\"forest_key_management/struct.Wallet.html\" title=\"struct forest_key_management::Wallet\">Wallet</a>",1,["forest_key_management::wallet::Wallet"]]],
"forest_legacy_ipld_amt":[["impl&lt;'db, V, BS&gt; Freeze for <a class=\"struct\" href=\"forest_legacy_ipld_amt/struct.Amt.html\" title=\"struct forest_legacy_ipld_amt::Amt\">Amt</a>&lt;'db, V, BS&gt;",1,["forest_legacy_ipld_amt::amt::Amt"]],["impl Freeze for <a class=\"enum\" href=\"forest_legacy_ipld_amt/enum.Error.html\" title=\"enum forest_legacy_ipld_amt::Error\">Error</a>",1,["forest_legacy_ipld_amt::error::Error"]],["impl&lt;'a, V&gt; Freeze for <a class=\"struct\" href=\"forest_legacy_ipld_amt/struct.ValueMut.html\" title=\"struct forest_legacy_ipld_amt::ValueMut\">ValueMut</a>&lt;'a, V&gt;",1,["forest_legacy_ipld_amt::value_mut::ValueMut"]]],
"forest_libp2p":[["impl Freeze for <a class=\"struct\" href=\"forest_libp2p/chain_exchange/struct.ChainExchangeRequest.html\" title=\"struct forest_libp2p::chain_exchange::ChainExchangeRequest\">ChainExchangeRequest</a>",1,["forest_libp2p::chain_exchange::message::ChainExchangeRequest"]],["impl Freeze for <a class=\"enum\" href=\"forest_libp2p/chain_exchange/enum.ChainExchangeResponseStatus.html\" title=\"enum forest_libp2p::chain_exchange::ChainExchangeResponseStatus\">ChainExchangeResponseStatus</a>",1,["forest_libp2p::chain_exchange::message::ChainExchangeResponseStatus"]],["impl Freeze for <a class=\"struct\" href=\"forest_libp2p/chain_exchange/struct.ChainExchangeResponse.html\" title=\"struct forest_libp2p::chain_exchange::ChainExchangeResponse\">ChainExchangeResponse</a>",1,["forest_libp2p::chain_exchange::message::ChainExchangeResponse"]],["impl Freeze for <a class=\"struct\" href=\"forest_libp2p/chain_exchange/struct.CompactedMessages.html\" title=\"struct forest_libp2p::chain_exchange::CompactedMessages\">CompactedMessages</a>",1,["forest_libp2p::chain_exchange::message::CompactedMessages"]],["impl Freeze for <a class=\"struct\" href=\"forest_libp2p/chain_exchange/struct.TipsetBundle.html\" title=\"struct forest_libp2p::chain_exchange::TipsetBundle\">TipsetBundle</a>",1,["forest_libp2p::chain_exchange::message::TipsetBundle"]],["impl Freeze for <a class=\"struct\" href=\"forest_libp2p/chain_exchange/struct.ChainExchangeProtocolName.html\" title=\"struct forest_libp2p::chain_exchange::ChainExchangeProtocolName\">ChainExchangeProtocolName</a>",1,["forest_libp2p::chain_exchange::ChainExchangeProtocolName"]],["impl Freeze for <a class=\"struct\" href=\"forest_libp2p/struct.Libp2pConfig.html\" title=\"struct forest_libp2p::Libp2pConfig\">Libp2pConfig</a>",1,["forest_libp2p::config::Libp2pConfig"]],["impl Freeze for <a class=\"struct\" href=\"forest_libp2p/hello/struct.HelloRequest.html\" title=\"struct forest_libp2p::hello::HelloRequest\">HelloRequest</a>",1,["forest_libp2p::hello::message::HelloRequest"]],["impl Freeze for <a class=\"struct\" href=\"forest_libp2p/hello/struct.HelloResponse.html\" title=\"struct forest_libp2p::hello::HelloResponse\">HelloResponse</a>",1,["forest_libp2p::hello::message::HelloResponse"]],["impl Freeze for <a class=\"struct\" href=\"forest_libp2p/hello/struct.HelloProtocolName.html\" title=\"struct forest_libp2p::hello::HelloProtocolName\">HelloProtocolName</a>",1,["forest_libp2p::hello::HelloProtocolName"]],["impl&lt;P, RQ, RS&gt; Freeze for <a class=\"struct\" href=\"forest_libp2p/rpc/struct.CborRequestResponse.html\" title=\"struct forest_libp2p::rpc::CborRequestResponse\">CborRequestResponse</a>&lt;P, RQ, RS&gt;",1,["forest_libp2p::rpc::CborRequestResponse"]],["impl Freeze for <a class=\"enum\" href=\"forest_libp2p/rpc/enum.RequestResponseError.html\" title=\"enum forest_libp2p::rpc::RequestResponseError\">RequestResponseError</a>",1,["forest_libp2p::rpc::RequestResponseError"]],["impl !Freeze for <a class=\"enum\" href=\"forest_libp2p/enum.NetworkEvent.html\" title=\"enum forest_libp2p::NetworkEvent\">NetworkEvent</a>",1,["forest_libp2p::service::NetworkEvent"]],["impl !Freeze for <a class=\"enum\" href=\"forest_libp2p/enum.PubsubMessage.html\" title=\"enum forest_libp2p::PubsubMessage\">PubsubMessage</a>",1,["forest_libp2p::service::PubsubMessage"]],["impl Freeze for <a class=\"enum\" href=\"forest_libp2p/enum.NetworkMessage.html\" title=\"enum forest_libp2p::NetworkMessage\">NetworkMessage</a>",1,["forest_libp2p::service::NetworkMessage"]],["impl Freeze for <a class=\"enum\" href=\"forest_libp2p/enum.NetRPCMethods.html\" title=\"enum forest_libp2p::NetRPCMethods\">NetRPCMethods</a>",1,["forest_libp2p::service::NetRPCMethods"]],["impl&lt;DB&gt; !Freeze for <a class=\"struct\" href=\"forest_libp2p/struct.Libp2pService.html\" title=\"struct forest_libp2p::Libp2pService\">Libp2pService</a>&lt;DB&gt;",1,["forest_libp2p::service::Libp2pService"]]],
"forest_message":[["impl Freeze for <a class=\"enum\" href=\"forest_message/chain_message/enum.ChainMessage.html\" title=\"enum forest_message::chain_message::ChainMessage\">ChainMessage</a>",1,["forest_message::chain_message::ChainMessage"]],["impl Freeze for <a class=\"struct\" href=\"forest_message/message/json/struct.MessageJson.html\" title=\"struct forest_message::message::json::MessageJson\">MessageJson</a>",1,["forest_message::message::json::MessageJson"]],["impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"forest_message/message/json/struct.MessageJsonRef.html\" title=\"struct forest_message::message::json::MessageJsonRef\">MessageJsonRef</a>&lt;'a&gt;",1,["forest_message::message::json::MessageJsonRef"]],["impl Freeze for <a class=\"struct\" href=\"forest_message/message_receipt/json/struct.MessageReceiptJson.html\" title=\"struct forest_message::message_receipt::json::MessageReceiptJson\">MessageReceiptJson</a>",1,["forest_message::message_receipt::json::MessageReceiptJson"]],["impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"forest_message/message_receipt/json/struct.MessageReceiptJsonRef.html\" title=\"struct forest_message::message_receipt::json::MessageReceiptJsonRef\">MessageReceiptJsonRef</a>&lt;'a&gt;",1,["forest_message::message_receipt::json::MessageReceiptJsonRef"]],["impl Freeze for <a class=\"struct\" href=\"forest_message/signed_message/json/struct.SignedMessageJson.html\" title=\"struct forest_message::signed_message::json::SignedMessageJson\">SignedMessageJson</a>",1,["forest_message::signed_message::json::SignedMessageJson"]],["impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"forest_message/signed_message/json/struct.SignedMessageJsonRef.html\" title=\"struct forest_message::signed_message::json::SignedMessageJsonRef\">SignedMessageJsonRef</a>&lt;'a&gt;",1,["forest_message::signed_message::json::SignedMessageJsonRef"]],["impl Freeze for <a class=\"struct\" href=\"forest_message/signed_message/struct.SignedMessage.html\" title=\"struct forest_message::signed_message::SignedMessage\">SignedMessage</a>",1,["forest_message::signed_message::SignedMessage"]]],
"forest_message_pool":[["impl Freeze for <a class=\"struct\" href=\"forest_message_pool/struct.MpoolConfig.html\" title=\"struct forest_message_pool::MpoolConfig\">MpoolConfig</a>",1,["forest_message_pool::config::MpoolConfig"]],["impl Freeze for <a class=\"enum\" href=\"forest_message_pool/enum.Error.html\" title=\"enum forest_message_pool::Error\">Error</a>",1,["forest_message_pool::errors::Error"]],["impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"forest_message_pool/struct.MessagePool.html\" title=\"struct forest_message_pool::MessagePool\">MessagePool</a>&lt;T&gt;",1,["forest_message_pool::msgpool::msg_pool::MessagePool"]],["impl&lt;DB&gt; Freeze for <a class=\"struct\" href=\"forest_message_pool/struct.MpoolRpcProvider.html\" title=\"struct forest_message_pool::MpoolRpcProvider\">MpoolRpcProvider</a>&lt;DB&gt;",1,["forest_message_pool::msgpool::provider::MpoolRpcProvider"]],["impl Freeze for <a class=\"struct\" href=\"forest_message_pool/test_provider/struct.TestApi.html\" title=\"struct forest_message_pool::test_provider::TestApi\">TestApi</a>",1,["forest_message_pool::msgpool::test_provider::TestApi"]]],
"forest_metrics":[["impl Freeze for <a class=\"struct\" href=\"forest_metrics/db/struct.DBCollector.html\" title=\"struct forest_metrics::db::DBCollector\">DBCollector</a>",1,["forest_metrics::db::DBCollector"]],["impl Freeze for <a class=\"enum\" href=\"forest_metrics/enum.Error.html\" title=\"enum forest_metrics::Error\">Error</a>",1,["forest_metrics::Error"]]],
"forest_net_utils":[["impl&lt;R, W&gt; Freeze for <a class=\"struct\" href=\"forest_net_utils/struct.FetchProgress.html\" title=\"struct forest_net_utils::FetchProgress\">FetchProgress</a>&lt;R, W&gt;<span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;W: Freeze,</span>",1,["forest_net_utils::download::FetchProgress"]]],
"forest_networks":[["impl Freeze for <a class=\"enum\" href=\"forest_networks/enum.Height.html\" title=\"enum forest_networks::Height\">Height</a>",1,["forest_networks::Height"]],["impl Freeze for <a class=\"struct\" href=\"forest_networks/struct.UpgradeInfo.html\" title=\"struct forest_networks::UpgradeInfo\">UpgradeInfo</a>",1,["forest_networks::UpgradeInfo"]],["impl Freeze for <a class=\"struct\" href=\"forest_networks/struct.HeightInfo.html\" title=\"struct forest_networks::HeightInfo\">HeightInfo</a>",1,["forest_networks::HeightInfo"]],["impl Freeze for <a class=\"struct\" href=\"forest_networks/struct.ChainConfig.html\" title=\"struct forest_networks::ChainConfig\">ChainConfig</a>",1,["forest_networks::ChainConfig"]]],
"forest_paramfetch":[["impl Freeze for <a class=\"enum\" href=\"forest_paramfetch/enum.SectorSizeOpt.html\" title=\"enum forest_paramfetch::SectorSizeOpt\">SectorSizeOpt</a>",1,["forest_paramfetch::SectorSizeOpt"]]],
"forest_rpc_api":[["impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"forest_rpc_api/data_types/struct.StreamingData.html\" title=\"struct forest_rpc_api::data_types::StreamingData\">StreamingData</a>&lt;'a&gt;",1,["forest_rpc_api::data_types::StreamingData"]],["impl&lt;DB, B&gt; Freeze for <a class=\"struct\" href=\"forest_rpc_api/data_types/struct.RPCState.html\" title=\"struct forest_rpc_api::data_types::RPCState\">RPCState</a>&lt;DB, B&gt;",1,["forest_rpc_api::data_types::RPCState"]],["impl Freeze for <a class=\"struct\" href=\"forest_rpc_api/data_types/struct.RPCSyncState.html\" title=\"struct forest_rpc_api::data_types::RPCSyncState\">RPCSyncState</a>",1,["forest_rpc_api::data_types::RPCSyncState"]],["impl Freeze for <a class=\"struct\" href=\"forest_rpc_api/data_types/struct.BlockMessages.html\" title=\"struct forest_rpc_api::data_types::BlockMessages\">BlockMessages</a>",1,["forest_rpc_api::data_types::BlockMessages"]],["impl Freeze for <a class=\"struct\" href=\"forest_rpc_api/data_types/struct.MessageSendSpec.html\" title=\"struct forest_rpc_api::data_types::MessageSendSpec\">MessageSendSpec</a>",1,["forest_rpc_api::data_types::MessageSendSpec"]],["impl Freeze for <a class=\"struct\" href=\"forest_rpc_api/data_types/struct.Deadline.html\" title=\"struct forest_rpc_api::data_types::Deadline\">Deadline</a>",1,["forest_rpc_api::data_types::Deadline"]],["impl Freeze for <a class=\"struct\" href=\"forest_rpc_api/data_types/struct.Fault.html\" title=\"struct forest_rpc_api::data_types::Fault\">Fault</a>",1,["forest_rpc_api::data_types::Fault"]],["impl Freeze for <a class=\"struct\" href=\"forest_rpc_api/data_types/struct.Partition.html\" title=\"struct forest_rpc_api::data_types::Partition\">Partition</a>",1,["forest_rpc_api::data_types::Partition"]],["impl Freeze for <a class=\"struct\" href=\"forest_rpc_api/data_types/struct.ActorStateJson.html\" title=\"struct forest_rpc_api::data_types::ActorStateJson\">ActorStateJson</a>",1,["forest_rpc_api::data_types::ActorStateJson"]],["impl Freeze for <a class=\"struct\" href=\"forest_rpc_api/data_types/struct.MarketDeal.html\" title=\"struct forest_rpc_api::data_types::MarketDeal\">MarketDeal</a>",1,["forest_rpc_api::data_types::MarketDeal"]],["impl Freeze for <a class=\"struct\" href=\"forest_rpc_api/data_types/struct.MessageLookup.html\" title=\"struct forest_rpc_api::data_types::MessageLookup\">MessageLookup</a>",1,["forest_rpc_api::data_types::MessageLookup"]],["impl Freeze for <a class=\"struct\" href=\"forest_rpc_api/data_types/struct.BlockTemplate.html\" title=\"struct forest_rpc_api::data_types::BlockTemplate\">BlockTemplate</a>",1,["forest_rpc_api::data_types::BlockTemplate"]],["impl Freeze for <a class=\"struct\" href=\"forest_rpc_api/data_types/struct.MiningBaseInfoJson.html\" title=\"struct forest_rpc_api::data_types::MiningBaseInfoJson\">MiningBaseInfoJson</a>",1,["forest_rpc_api::data_types::MiningBaseInfoJson"]],["impl Freeze for <a class=\"struct\" href=\"forest_rpc_api/data_types/struct.AddrInfo.html\" title=\"struct forest_rpc_api::data_types::AddrInfo\">AddrInfo</a>",1,["forest_rpc_api::data_types::AddrInfo"]],["impl Freeze for <a class=\"struct\" href=\"forest_rpc_api/data_types/struct.PeerID.html\" title=\"struct forest_rpc_api::data_types::PeerID\">PeerID</a>",1,["forest_rpc_api::data_types::PeerID"]],["impl Freeze for <a class=\"enum\" href=\"forest_rpc_api/enum.Access.html\" title=\"enum forest_rpc_api::Access\">Access</a>",1,["forest_rpc_api::Access"]]],
"forest_rpc_client":[["impl Freeze for <a class=\"struct\" href=\"forest_rpc_client/struct.ApiInfo.html\" title=\"struct forest_rpc_client::ApiInfo\">ApiInfo</a>",1,["forest_rpc_client::ApiInfo"]],["impl Freeze for <a class=\"struct\" href=\"forest_rpc_client/struct.JsonRpcError.html\" title=\"struct forest_rpc_client::JsonRpcError\">JsonRpcError</a>",1,["forest_rpc_client::JsonRpcError"]],["impl&lt;R&gt; Freeze for <a class=\"enum\" href=\"forest_rpc_client/enum.JsonRpcResponse.html\" title=\"enum forest_rpc_client::JsonRpcResponse\">JsonRpcResponse</a>&lt;R&gt;<span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Freeze,</span>",1,["forest_rpc_client::JsonRpcResponse"]]],
"forest_state_manager":[["impl&lt;DB&gt; Freeze for <a class=\"struct\" href=\"forest_state_manager/chain_rand/struct.ChainRand.html\" title=\"struct forest_state_manager::chain_rand::ChainRand\">ChainRand</a>&lt;DB&gt;",1,["forest_state_manager::chain_rand::ChainRand"]],["impl Freeze for <a class=\"enum\" href=\"forest_state_manager/enum.Error.html\" title=\"enum forest_state_manager::Error\">Error</a>",1,["forest_state_manager::errors::Error"]],["impl Freeze for <a class=\"struct\" href=\"forest_state_manager/struct.InvocResult.html\" title=\"struct forest_state_manager::InvocResult\">InvocResult</a>",1,["forest_state_manager::InvocResult"]],["impl Freeze for <a class=\"struct\" href=\"forest_state_manager/struct.MarketBalance.html\" title=\"struct forest_state_manager::MarketBalance\">MarketBalance</a>",1,["forest_state_manager::MarketBalance"]],["impl&lt;DB&gt; !Freeze for <a class=\"struct\" href=\"forest_state_manager/struct.StateManager.html\" title=\"struct forest_state_manager::StateManager\">StateManager</a>&lt;DB&gt;",1,["forest_state_manager::StateManager"]],["impl Freeze for <a class=\"struct\" href=\"forest_state_manager/struct.MiningBaseInfo.html\" title=\"struct forest_state_manager::MiningBaseInfo\">MiningBaseInfo</a>",1,["forest_state_manager::MiningBaseInfo"]]],
"forest_state_migration":[["impl Freeze for <a class=\"enum\" href=\"forest_state_migration/enum.MigrationError.html\" title=\"enum forest_state_migration::MigrationError\">MigrationError</a>",1,["forest_state_migration::MigrationError"]],["impl&lt;BS&gt; Freeze for <a class=\"struct\" href=\"forest_state_migration/struct.StateMigration.html\" title=\"struct forest_state_migration::StateMigration\">StateMigration</a>&lt;BS&gt;",1,["forest_state_migration::StateMigration"]],["impl Freeze for <a class=\"struct\" href=\"forest_state_migration/struct.ActorMigrationInput.html\" title=\"struct forest_state_migration::ActorMigrationInput\">ActorMigrationInput</a>",1,["forest_state_migration::ActorMigrationInput"]],["impl Freeze for <a class=\"struct\" href=\"forest_state_migration/struct.MigrationOutput.html\" title=\"struct forest_state_migration::MigrationOutput\">MigrationOutput</a>",1,["forest_state_migration::MigrationOutput"]]],
"forest_vm":[["impl Freeze for <a class=\"struct\" href=\"forest_vm/json/struct.ActorStateJson.html\" title=\"struct forest_vm::json::ActorStateJson\">ActorStateJson</a>",1,["forest_vm::actor_state::json::ActorStateJson"]],["impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"forest_vm/json/struct.ActorStateJsonRef.html\" title=\"struct forest_vm::json::ActorStateJsonRef\">ActorStateJsonRef</a>&lt;'a&gt;",1,["forest_vm::actor_state::json::ActorStateJsonRef"]],["impl Freeze for <a class=\"struct\" href=\"forest_vm/struct.ActorError.html\" title=\"struct forest_vm::ActorError\">ActorError</a>",1,["forest_vm::error::ActorError"]],["impl Freeze for <a class=\"struct\" href=\"forest_vm/struct.EMPTY_ARR_BYTES.html\" title=\"struct forest_vm::EMPTY_ARR_BYTES\">EMPTY_ARR_BYTES</a>",1,["forest_vm::EMPTY_ARR_BYTES"]],["impl Freeze for <a class=\"struct\" href=\"forest_vm/struct.EMPTY_ARR_CID.html\" title=\"struct forest_vm::EMPTY_ARR_CID\">EMPTY_ARR_CID</a>",1,["forest_vm::EMPTY_ARR_CID"]]]
};if (window.register_implementors) {window.register_implementors(implementors);} else {window.pending_implementors = implementors;}})()